// Generated by LiveScript 1.2.0
(function(){
  define(['repository', 'template!./items', 'template!./item', 'jquery', 'underscore', 'uuid', 'util'], function(repo, temp, itemp, $, _, uuid, util){
    var addItem, addComment, addUp, addDown, countDown, countUp, countComment, iDownIt, iUpIt, iCommentIt;
    addItem = function(text){
      var item;
      item = {
        text: text,
        id: new uuid().toString(),
        author: repo.me().id,
        date: new Date(),
        version: 1
      };
      repo.postItem(item);
      return item;
    };
    addComment = function(refId, text){
      var item;
      item = {
        text: text,
        id: new uuid().toString(),
        author: repo.me().id,
        date: new Date(),
        version: 1,
        ref: refId,
        type: 'comment'
      };
      repo.postItem(item);
      return item;
    };
    addUp = function(refId){
      var item;
      item = {
        text: ':up',
        id: new uuid().toString(),
        author: repo.me().id,
        date: new Date(),
        version: 1,
        ref: refId,
        type: 'up'
      };
      return repo.postItem(item);
    };
    addDown = function(refId){
      var item;
      item = {
        text: ':down',
        id: new uuid().toString(),
        author: repo.me().id,
        date: new Date(),
        version: 1,
        ref: refId,
        type: 'down'
      };
      return repo.postItem(item);
    };
    countDown = function(refId){
      return repo.findItem(function(it){
        return it.type === 'down' && it.ref === refId;
      }).length;
    };
    countUp = function(refId){
      return repo.findItem(function(it){
        return it.type === 'up' && it.ref === refId;
      }).length;
    };
    countComment = function(refId){
      return repo.findItem(function(it){
        return it.type === 'comment' && it.ref === refId;
      }).length;
    };
    iDownIt = function(refId){
      return repo.findItem(function(it){
        return it.type === 'down' && it.ref === refId && it.author === repo.me().id;
      }).length > 0;
    };
    iUpIt = function(refId){
      return repo.findItem(function(it){
        return it.type === 'up' && it.ref === refId && it.author === repo.me().id;
      }).length > 0;
    };
    iCommentIt = function(refId){
      return repo.findItem(function(it){
        return it.type === 'comment' && it.ref === refId && it.author === repo.me().id;
      }).length > 0;
    };
    return {
      view: function(){
        var displayItem;
        displayItem = function(it){
          return $(itemp((it.authorObj = repo.friend(it.author), it.timeAgo = util.timeAgo(it.date), it.downNum = countDown(it.id), it.upNum = countUp(it.id), it.commentNum = countComment(it.id), it.iDownIt = iDownIt(it.id), it.iUpIt = iUpIt(it.id), it.iCommentIt = iCommentIt(it.id), it.isComment = it.type === 'comment', it)));
        };
        $('.items').append($(temp()));
        _(repo.items()).chain().sortBy(function(it){
          return -new Date(it.date);
        }).each(function(it){
          if (it.type === 'up' || it.type === 'down') {} else {
            return $('.items-list').append(displayItem(it));
          }
        });
        $('.text-send').val('');
        $('.btn-send').click(function(){
          return addItem($('.text-send').val());
        });
        $('.text-send').keydown(function(it){
          var item;
          if (it.which === 13) {
            it.preventDefault();
            item = addItem($('.text-send').val());
            return $('.items-list').prepend(dispayItem(item));
          }
        });
        $('.text-comment').keydown(function(it){
          var tf, text, refId, item;
          if (it.which === 13) {
            it.preventDefault();
            tf = $(this);
            text = tf.val();
            refId = tf.closest('.list-group-item').data('id');
            item = addComment(refId, text);
            return $('.items-list').prepend(dispayItem(item));
          }
        });
        $('.up-button').click(function(){
          var refId, item;
          refId = $(this).closest('.list-group-item').data('id');
          return item = addUp(refId);
        });
        $('.down-button').click(function(){
          var refId, item;
          refId = $(this).closest('.list-group-item').data('id');
          return item = addDown(refId);
        });
        $('.comment-button').click(function(){
          return $(this).closest('.list-group-item').find('.comment-text').toggleClass('hide');
        });
        return $('.list-group-item').on('mouseenter mouseleave', function(e){
          $(e.target).closest('.list-group-item')[e.type === 'mouseenter' ? 'addClass' : 'removeClass']('hover');
          return e.preventDefault();
        });
      }
    };
  });
}).call(this);
